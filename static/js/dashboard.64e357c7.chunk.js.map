{"version":3,"file":"static/js/dashboard.64e357c7.chunk.js","mappings":"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","sources":["components/Status/styles.ts","components/Status/index.tsx","hooks/useStatus/index.ts","pages/Dashboard/styles.ts","components/MenuBar/styles.ts","components/MenuBar/index.tsx","components/Card/styles.ts","utils.ts","components/Card/index.tsx","pages/Dashboard/index.tsx"],"sourcesContent":["import styled, { css } from 'styled-components';\n\ninterface StatusViewProps {\n  type: string;\n}\n\nexport const StatusView = styled.span<StatusViewProps>`\n  display: block;\n  margin-top: 8px;\n  color: #04d361;\n  ${props =>\n    props.type === 'error' &&\n    css`\n      color: #c53030;\n    `}\n`;\n","import React from 'react';\nimport { IStatus } from '../../hooks/useStatus';\nimport { StatusView } from './styles';\n\ninterface IStatusProps {\n  status: IStatus | null;\n}\n\nconst Status: React.FC<IStatusProps> = ({ status }: IStatusProps) => {\n  return status ? (\n    <StatusView type={status?.type}>\n      <strong>{status?.message}</strong>\n    </StatusView>\n  ) : (\n    <></>\n  );\n};\n\nexport default Status;\n","import React from 'react';\nexport interface IStatus {\n  type: string;\n  fields: string;\n  message: string;\n}\n\nexport const useStatus = (initial: IStatus | null) => {\n  return React.useState<IStatus | null>(initial);\n};\n","import styled from 'styled-components';\n\n\nexport const DateContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  svg {\n    cursor: pointer;\n  }\n`;\n\nexport const EntryList = styled.div`\n  width: 100%;\n  margin-top: 20px;\n`;\n","import styled from 'styled-components';\n\nexport const MenuBarContainer = styled.div`\n  width: 100%;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n\n  img {\n    height: 64px;\n    border-radius: 50%;\n    margin: 0px 80px 0px 80px;\n  }\n  svg {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport { MenuBarContainer } from './styles';\nimport { FiLogOut } from 'react-icons/fi';\nimport userImg from '../../assets/user.png';\nimport { UserAuth } from '../../contexts/AuthContext';\n\nconst MenuBar: React.FC = () => {\n  const {user, logOut} = UserAuth();\n\n  const handleLogout = async () => {\n    try{\n      await logOut();\n    } catch (error)  {\n      console.log(error);\n      // setInputStatus({type: \"error\", fields: \"email\", message: (error instanceof Error)?error.message:\"Unknown error\"});\n    }\n  }\n  return (\n    <MenuBarContainer>\n      <img src={user.photoURL?user.photoURL:userImg} onError={({ currentTarget }) => {\n        currentTarget.onerror = null;\n        currentTarget.src=userImg;\n      }} alt=\"User photograph\"/>\n      <FiLogOut size={30} onClick={() => handleLogout()} />\n    </MenuBarContainer>\n  );\n};\n\nexport default MenuBar;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-size: 36px;\n  color: #3a3a3a;\n`;\n\nexport const CardContainer = styled.div`\n  /* max-width: 400px; */\n  width: 100%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  padding: 0px;\n  margin: 10px 0px 0px 0px;\n\n  background-color: #eee;\n  border-radius: 5px;\n  border-left: 3px dashed lightgray;\n\n  div {\n    margin-left: 10px;\n    width: 100%;\n  }\n\n  .ContentContainer {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    width: 100%;\n    border-radius: 5px 5px 0px 0px;\n    margin: 0;\n    background: #fff;\n\n    header {\n      width: 100%;\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n\n      svg {\n        margin: 10px;\n        cursor: pointer;\n      }\n    }\n\n\n\n    strong {\n      color: darkgray;\n      width: 100%;\n      padding: 10px;\n      display: flex;\n      gap: 10px;\n      align-items: center;\n      input,select {\n        width: fit-content;\n        margin: 0px;\n        height: 30px;\n        color: black;\n      }\n    }\n\n    span {\n      border: 0px;\n      padding: 10px;\n      width: 100%;\n      text-align: justify;\n    }\n\n    span:empty::before {\n      content: attr(data-placeholder);\n      color: lightgray;\n    }\n\n    span:focus {\n      outline: none;\n    }\n\n    .ActionContainer {\n      width: 100%;\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      margin: 4px;\n      p {\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        * {\n          margin-right: 5px;\n        }\n      }\n    }\n  }\n`;\n","export const isJsonString = (myString: string) => {\n  try {\n      JSON.parse(myString);\n  } catch (e) {\n      return false;\n  }\n  return true;\n}\n","import React from 'react';\nimport { CardContainer } from './styles';\nimport { FiTrash2 } from 'react-icons/fi';\nimport { isJsonString } from '../../utils';\ninterface ICardProps {\n  id: string;\n  number: number;\n  content: string;\n  onDeleteCard: any;\n  onChangeContent: any;\n}\n\nconst defaultContent = {\n  type: 'record',\n  text: '',\n  color: 'red',\n  fixed: false,\n}\n\nconst Card: React.FC<ICardProps> = ({\n  id,\n  number,\n  content,\n  onDeleteCard,\n  onChangeContent\n}: ICardProps) => {\n  const textRef = React.useRef<HTMLSpanElement>(null);\n\n  const objContent = isJsonString(content)?JSON.parse(content):{...defaultContent, text: content};\n  return (\n    <CardContainer key={id} color={objContent.color}>\n      <div className=\"ContentContainer\">\n        <header>\n          <strong>\n          <input type={'checkbox'} checked={objContent.fixed} onChange={e => onChangeContent(id, JSON.stringify({...objContent, fixed: e.target.checked}))} />\n          {number}#\n            <select value={objContent.type} onChange={e => onChangeContent(id, JSON.stringify({...objContent, type: e.target.value}))}>\n              <option value=\"note\">Note</option>\n              <option value=\"gratitude\">Gratitude</option>\n              <option value=\"record\">Record</option>\n            </select>\n            </strong>\n          <FiTrash2 onClick={e => onDeleteCard(id)}></FiTrash2>\n        </header>\n        <span\n          ref={textRef}\n          role=\"textbox\"\n          contentEditable\n          data-placeholder='What do you have for today?'\n          onBlur={e => onChangeContent(id, JSON.stringify({...objContent, text: e.target.innerText}))}\n          suppressContentEditableWarning={true}\n        >\n          {objContent.text}\n        </span>\n      </div>\n    </CardContainer>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport { BodyContainer, CustomButton } from \"../../styles/global\";\nimport { DateContainer, EntryList } from \"./styles\";\nimport Status from \"../../components/Status\";\nimport MenuBar from \"../../components/MenuBar\";\nimport Card from \"../../components/Card\";\nimport { useStatus } from \"../../hooks/useStatus\";\nimport uuid from \"react-uuid\";\nimport { FiArrowLeft, FiArrowRight } from 'react-icons/fi';\nimport { database} from \"../../services/firebase\";\nimport {collection, query, where, getDocs, doc, addDoc, setDoc, deleteDoc} from 'firebase/firestore';\nimport { UserAuth } from '../../contexts/AuthContext';\nimport { isJsonString } from '../../utils';\n\ninterface IEntry {\n  uid: string;\n  id: string;\n  content: string;\n  date: string;\n}\n\nconst Dashboard: React.FC = () => {\n  const startDate = new Date().toISOString().split(\"T\")[0];\n  const [selectedDate, setSelectedDate] = React.useState<string>(startDate);\n  const [entries, setEntries] = React.useState<IEntry[]>([]);\n  const [inputStatus, setInputStatus] = useStatus(null);\n  const dateRef = React.useRef<HTMLInputElement>(null);\n  const {user} = UserAuth();\n\n  const handleDateIncDec = (days: number) => {\n    const date = new Date(selectedDate);\n    date.setDate(date.getDate() + days);\n    const dateStr = date.toISOString().split(\"T\")[0];\n    setSelectedDate(dateStr);\n    if (dateRef !== null && dateRef.current !== null) {\n      dateRef.current.value = dateStr;\n    }\n  };\n\n  const handleDateChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedDate(event.target.value);\n  };\n\n  async function handleAddNewEntry(event: React.FormEvent<HTMLButtonElement>) {\n    const newEntry: IEntry = {\n      uid: user.uid,\n      id: uuid(),\n      content: \"\",\n      date: selectedDate,\n    };\n    const newEntries = [...entries, newEntry];\n    setEntries(newEntries);\n    const userDocRef = doc(database, \"users\", user.uid);\n    const entriesRef = collection(userDocRef, \"entries\");\n    await addDoc(entriesRef, newEntry);\n  }\n\n  async function fetchEntries() {\n    const userDocRef = doc(database, \"users\", user.uid);\n    const entriesRef = collection(userDocRef, \"entries\");\n    const querySnapshot = await getDocs(entriesRef);\n    const entries: IEntry[] = [];\n    querySnapshot.forEach((doc) => {\n      entries.push(doc.data() as IEntry);\n    });\n    setEntries(entries);\n  }\n\n  React.useEffect(() => {\n    fetchEntries();\n  }, []);\n\n  const handleDeleteEntry = async (id: string) => {\n    const newEntries = entries.filter(entry => entry.id !== id);\n    setEntries(newEntries);\n\n    const userDocRef = doc(database, \"users\", user.uid);\n    const entriesRef = collection(userDocRef, \"entries\");\n    const userQuery = query(entriesRef, where(\"id\", \"==\", id));\n    const querySnapshot = await getDocs(userQuery);\n    querySnapshot.forEach((document) => {\n      deleteDoc(doc(database, `users/${user.uid}/entries`, document.id));\n    });\n  }\n\n  const handleChangeEntry = async (id: string, content: string) => {\n    const newEntries = entries.map((entry) => {\n      if (entry.id === id) {\n        entry.content = content;\n      }\n      return entry;\n    });\n    setEntries(newEntries);\n\n    const changedEntry = entries.find(entry => entry.id === id);\n    if (changedEntry) {\n      changedEntry.content = content;\n      const userDocRef = doc(database, \"users\", user.uid);\n      const entriesRef = collection(userDocRef, \"entries\");\n      const userQuery = query(entriesRef, where(\"id\", \"==\", id));\n      const querySnapshot = await getDocs(userQuery);\n      querySnapshot.forEach((document) => {\n        setDoc(doc(database, `users/${user.uid}/entries`, document.id), changedEntry);\n      });\n    }\n  }\n\n  let count = 0;\n  return (\n      <BodyContainer>\n      <MenuBar/>\n      <Status status={inputStatus} />\n      <DateContainer>\n      <FiArrowLeft size={30} onClick={() => handleDateIncDec(-1)}/>\n        <input\n          ref={dateRef}\n          type=\"date\"\n          defaultValue={startDate}\n          onChange={handleDateChanged}\n        ></input>\n      <FiArrowRight size={30} onClick={() => handleDateIncDec(1)}/>\n      </DateContainer>\n      <EntryList>\n        {entries.map((entry, index) => {\n          console.log(entry)\n          return (entry.date === selectedDate || (isJsonString(entry.content) && JSON.parse(entry.content).fixed === true)) ? (\n            <Card\n              key={entry.id}\n              id={entry.id}\n              number={count=count+1}\n              content={entry.content}\n              onDeleteCard={handleDeleteEntry}\n              onChangeContent={handleChangeEntry}\n            />\n          ) : (\n            <div key={entry.id} ></div>\n          );\n        })}\n      </EntryList>\n      <CustomButton color=\"#04d361\" onClick={handleAddNewEntry}>Add New</CustomButton>\n      </BodyContainer>\n  );\n};\n\nexport default Dashboard;\n"],"names":["StatusView","styled","props","type","css","status","message","useStatus","initial","React","DateContainer","EntryList","MenuBarContainer","UserAuth","user","logOut","handleLogout","console","log","src","photoURL","userImg","onError","currentTarget","onerror","alt","size","onClick","CardContainer","isJsonString","myString","JSON","parse","e","defaultContent","text","color","fixed","id","number","content","onDeleteCard","onChangeContent","textRef","objContent","className","checked","onChange","stringify","target","value","ref","role","contentEditable","onBlur","innerText","suppressContentEditableWarning","startDate","Date","toISOString","split","selectedDate","setSelectedDate","entries","setEntries","inputStatus","dateRef","handleDateIncDec","days","date","setDate","getDate","dateStr","current","event","newEntry","uid","uuid","newEntries","userDocRef","doc","database","entriesRef","collection","addDoc","getDocs","querySnapshot","forEach","push","data","fetchEntries","handleDeleteEntry","filter","entry","userQuery","query","where","document","deleteDoc","handleChangeEntry","map","changedEntry","find","setDoc","count","Status","defaultValue","index"],"sourceRoot":""}