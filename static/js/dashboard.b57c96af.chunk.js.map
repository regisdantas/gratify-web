{"version":3,"file":"static/js/dashboard.b57c96af.chunk.js","mappings":"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","sources":["components/Status/styles.ts","components/Status/index.tsx","hooks/useStatus/index.ts","pages/Dashboard/styles.ts","components/MenuBar/styles.ts","components/MenuBar/index.tsx","components/Card/styles.ts","components/Card/index.tsx","pages/Dashboard/index.tsx"],"sourcesContent":["import styled, { css } from 'styled-components';\n\ninterface StatusViewProps {\n  type: string;\n}\n\nexport const StatusView = styled.span<StatusViewProps>`\n  display: block;\n  margin-top: 8px;\n  color: #04d361;\n  ${props =>\n    props.type === 'error' &&\n    css`\n      color: #c53030;\n    `}\n`;\n","import React from 'react';\nimport { IStatus } from '../../hooks/useStatus';\nimport { StatusView } from './styles';\n\ninterface IStatusProps {\n  status: IStatus | null;\n}\n\nconst Status: React.FC<IStatusProps> = ({ status }: IStatusProps) => {\n  return status ? (\n    <StatusView type={status?.type}>\n      <strong>{status?.message}</strong>\n    </StatusView>\n  ) : (\n    <></>\n  );\n};\n\nexport default Status;\n","import React from 'react';\nexport interface IStatus {\n  type: string;\n  fields: string;\n  message: string;\n}\n\nexport const useStatus = (initial: IStatus | null) => {\n  return React.useState<IStatus | null>(initial);\n};\n","import styled from 'styled-components';\n\nexport const EntryList = styled.div`\n  max-width: 400px;\n`;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-size: 36px;\n  color: #3a3a3a;\n`;\n\nexport const MenuBarContainer = styled.div`\n  width: 100%;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n\n  img {\n    width: 60px;\n    height: 64px;\n    border-radius: 50%;\n    margin: 0px 80px 0px 80px;\n  }\n  svg {\n    cursor: pointer;\n  }\n`;\n\nexport const Disabled = styled.span`\n  svg {\n    color: lightgrey;\n    cursor: default;\n  }\n`;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { MenuBarContainer, Disabled } from './styles';\nimport { FiArrowLeft, FiLogOut } from 'react-icons/fi';\nimport {User} from 'firebase/auth'\nimport userImg from '../../assets/user.png';\n\ninterface IMenuBarProps {\n  user: User;\n  backPath?: string;\n  handleLogout?: any;\n}\n\nconst MenuBar: React.FC<IMenuBarProps> = ({\n  user,\n  backPath,\n  handleLogout,\n}: IMenuBarProps) => {\n  return (\n    <MenuBarContainer>\n      {backPath !== '' ? (\n        <NavLink to={backPath?backPath:\"\"}>\n          <FiArrowLeft size={30} />\n        </NavLink>\n      ) : (\n        <Disabled>\n          <FiArrowLeft size={30} />\n        </Disabled>\n      )}\n      <img src={user.photoURL?user.photoURL:userImg} onError={({ currentTarget }) => {\n        currentTarget.onerror = null;\n        currentTarget.src=userImg;\n      }} alt=\"User photograph\"/>\n      <FiLogOut size={30} onClick={() => handleLogout()} />\n    </MenuBarContainer>\n  );\n};\n\nexport default MenuBar;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-size: 36px;\n  color: #3a3a3a;\n`;\n\nexport const CardContainer = styled.div`\n  max-width: 400px;\n  width: 100%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  padding: 0px;\n  margin: 10px 0px 0px 0px;\n\n  background-color: #eee;\n  border-radius: 5px;\n  border-left: 3px dashed lightgray;\n\n  div {\n    margin-left: 10px;\n    width: 100%;\n  }\n\n  .ContentContainer {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    width: 100%;\n    border-radius: 5px 5px 0px 0px;\n    margin: 0;\n    background: #fff;\n\n    header {\n      width: 100%;\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n\n      svg {\n        margin: 10px;\n        cursor: pointer;\n      }\n    }\n    strong {\n      width: 100%;\n      padding: 10px;\n    }\n\n    span {\n      border: 0px;\n      padding: 10px;\n      width: 100%;\n      text-align: justify;\n\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    span:empty::before {\n      content: attr(data-placeholder);\n      display: inline-block;\n      color: lightgray;\n    }\n\n    span:focus {\n      outline: none;\n    }\n\n    .ActionContainer {\n      width: 100%;\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      margin: 4px;\n      p {\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        * {\n          margin-right: 5px;\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { CardContainer } from './styles';\nimport { FiTrash2 } from 'react-icons/fi';\n\ninterface ICardProps {\n  id: string;\n  content: string;\n  onDeleteCard: any;\n  onChangeContent: any;\n}\n\nconst Card: React.FC<ICardProps> = ({\n  id,\n  content,\n  onDeleteCard,\n  onChangeContent\n}: ICardProps) => {\n  const textRef = React.useRef<HTMLSpanElement>(null);\n  return (\n    <CardContainer>\n      <div className=\"ContentContainer\">\n        <header>\n          <strong>{id}</strong>\n            <FiTrash2 onClick={e => onDeleteCard(id)}></FiTrash2>\n        </header>\n        <span\n          ref={textRef}\n          role=\"textbox\"\n          contentEditable\n          data-placeholder='What are you grateful for this day?'\n          onBlur={e => onChangeContent(id, e.currentTarget.innerText)}\n          suppressContentEditableWarning={true}\n        >\n          {content}\n        </span>\n      </div>\n    </CardContainer>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport { BodyContainer } from \"../../styles/global\";\nimport { EntryList } from \"./styles\";\nimport Header from \"../../components/Header\";\nimport Status from \"../../components/Status\";\nimport MenuBar from \"../../components/MenuBar\";\nimport Card from \"../../components/Card\";\nimport { useStatus } from \"../../hooks/useStatus\";\nimport uuid from \"react-uuid\";\nimport {User} from 'firebase/auth';\n\ninterface IEntry {\n  id: string;\n  content: string;\n  date: string;\n}\n\ninterface IDashboardProps {\n  user: User;\n}\n\nconst Dashboard: React.FC<IDashboardProps> = ({user}:IDashboardProps) => {\n  const startDate = new Date().toISOString().split(\"T\")[0];\n  const [selectedDate, setSelectedDate] = React.useState<string>(startDate);\n  const [entries, setEntries] = React.useState<IEntry[]>([]);\n  const [inputStatus, setInputStatus] = useStatus(null);\n\n  const handleDateChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedDate(event.target.value);\n  };\n\n  const saveEntries = (newEntries: IEntry[]) => {\n    localStorage.setItem(\"gratify_entries\", JSON.stringify(newEntries));\n    setEntries(newEntries);\n  }\n\n  async function handleAddNewEntry(event: React.FormEvent<HTMLButtonElement>) {\n    const newEntry: IEntry = {\n      id: uuid(),\n      content: \"\",\n      date: selectedDate,\n    };\n    const newEntries = [...entries, newEntry];\n    saveEntries(newEntries);\n  }\n\n  React.useEffect(() => {\n    const entriesStr = localStorage.getItem(\"gratify_entries\");\n    try {\n      if (entriesStr) {\n        const storedEntries = JSON.parse(entriesStr);\n        if (storedEntries && Array.isArray(storedEntries)) {\n          setEntries(storedEntries);\n        }\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n\n  const handleDeleteEntry = (id: string) => {\n    const newEntries = entries.filter(entry => entry.id !== id);\n    saveEntries(newEntries);\n  }\n\n  const handleChangeEntry = (id: string, content: string) => {\n    const newEntries = entries.map((entry) => {\n      if (entry.id === id) {\n        entry.content = content;\n      }\n      return entry;\n    });\n    saveEntries(newEntries);\n  }\n\n  return (\n      <BodyContainer>\n      <MenuBar user={user}/>\n      <Status status={inputStatus} />\n        <input\n          type=\"date\"\n          defaultValue={startDate}\n          onChange={handleDateChanged}\n        ></input>\n      <EntryList>\n        {entries.map((entry) => {\n          return entry.date === selectedDate ? (\n            <Card\n              id={entry.id}\n              content={entry.content}\n              onDeleteCard={handleDeleteEntry}\n              onChangeContent={handleChangeEntry}\n            />\n          ) : (\n            <></>\n          );\n        })}\n      </EntryList>\n      <button onClick={handleAddNewEntry}>Add New</button>\n      </BodyContainer>\n  );\n};\n\nexport default Dashboard;\n"],"names":["StatusView","styled","props","type","css","status","message","useStatus","initial","React","EntryList","MenuBarContainer","Disabled","user","backPath","handleLogout","to","size","src","photoURL","userImg","onError","currentTarget","onerror","alt","onClick","CardContainer","id","content","onDeleteCard","onChangeContent","textRef","className","e","ref","role","contentEditable","onBlur","innerText","suppressContentEditableWarning","startDate","Date","toISOString","split","selectedDate","setSelectedDate","entries","setEntries","inputStatus","saveEntries","newEntries","localStorage","setItem","JSON","stringify","event","newEntry","uuid","date","entriesStr","getItem","storedEntries","parse","Array","isArray","console","log","handleDeleteEntry","filter","entry","handleChangeEntry","map","Status","defaultValue","onChange","target","value"],"sourceRoot":""}